---
kind: pipeline
name: default

platform:
  os: linux
  arch: amd64

steps:
- name: restore
  pull: true
  image: coreyja/rust-cache:yarn
  settings:
    aws_access_key_id:
      from_secret: CACHE_AWS_ACCESS_KEY_ID
    aws_secret_access_key:
      from_secret: CACHE_AWS_SECRET_ACCESS_KEY
    cache_bucket: cache.dokku.coreyja
    cache_download: true
  depends_on:
  - clone

- name: install
  image: node:8
  commands:
  - "echo \"//my-registry.dokku.coreyja.com/:_authToken=$NPM_AUTH_TOKEN\" >> .npmrc"
  - "echo \"//npm.fontawesome.com/:_authToken=$FONTAWESOME_AUTH_TOKEN\" >> .npmrc"
  - yarn install --frozen-lockfile
  environment:
    FONTAWESOME_AUTH_TOKEN:
      from_secret: FONTAWESOME_AUTH_TOKEN
    NPM_AUTH_TOKEN:
      from_secret: NPM_AUTH_TOKEN
  depends_on:
  - restore

- name: test
  image: node:8
  commands:
  - yarn install --frozen
  - yarn test
  depends_on:
  - install

- name: build
  image: node:8
  commands:
  - yarn install --frozen
  - yarn build
  environment:
    AWS_BUCKET:
      from_secret: AWS_BUCKET
  depends_on:
  - test

- name: deploy
  image: node:8
  commands:
  - yarn install --frozen
  - yarn deploy
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: AWS_ACCESS_KEY_ID
    AWS_BUCKET:
      from_secret: AWS_BUCKET
    AWS_DISTRIBUTION_ID:
      from_secret: AWS_DISTRIBUTION_ID
    AWS_SECRET_ACCESS_KEY:
      from_secret: AWS_SECRET_ACCESS_KEY
  when:
    branch:
    - master
    event:
    - push
  depends_on:
  - build

- name: rebuild
  image: coreyja/rust-cache:yarn
  settings:
    aws_access_key_id:
      from_secret: CACHE_AWS_ACCESS_KEY_ID
    aws_secret_access_key:
      from_secret: CACHE_AWS_SECRET_ACCESS_KEY
    cache_bucket: cache.dokku.coreyja
  depends_on:
  - install

---
kind: signature
hmac: fe4fa1c0ac3dbd1747d8875724f44ca9d1a0c37ca2b3b237c14d9e41ad25afae

...
